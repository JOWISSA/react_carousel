{"version":3,"sources":["App.tsx","components/Carousel.tsx","index.tsx"],"names":["Parameter","Carousel","state","position","nextImage","props","images","frameSize","itemWidth","infinite","maxWidth","length","stepSum","step","setState","prevImage","this","animationDuration","carouselTransform","transform","transition","containerWidth","width","imgWidth","isDisabledPrev","isDisabledNext","className","style","map","image","alt","src","type","onClick","disabled","Component","App","handleChange","event","target","name","value","min","max","Infinite","ItemWidth","FrameSize","Step","AnimationDuration","htmlFor","defaultValue","onChange","checked","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6afb3009.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nenum Parameter {\n  ItemWidth = 'itemWidth',\n  FrameSize = 'frameSize',\n  Step = 'step',\n  AnimationDuration = 'animationDuration',\n  Infinite = 'infinite',\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name,\n      value,\n      min,\n      max,\n    } = event.target;\n    const isValidValue = (+value >= +min && +value <= +max)\n      || (name === Parameter.Infinite);\n\n    if (isValidValue) {\n      switch (name) {\n        case Parameter.ItemWidth:\n          this.setState({ itemWidth: +value });\n          break;\n\n        case Parameter.FrameSize:\n          this.setState({ frameSize: +value });\n          break;\n\n        case Parameter.Step:\n          this.setState({ step: +value });\n          break;\n\n        case Parameter.AnimationDuration:\n          this.setState({ animationDuration: +value });\n          break;\n\n        case Parameter.Infinite:\n          this.setState((state) => ({ infinite: !state.infinite }));\n          break;\n\n        default:\n          return 0;\n      }\n    }\n\n    return this.state;\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1\n          data-cy=\"title\"\n          className=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <form className=\"form\">\n          <label htmlFor=\"step\">\n            Step:\n            <input\n              className=\"inputField\"\n              name=\"step\"\n              type=\"number\"\n              min={1}\n              max={5}\n              defaultValue={step}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label htmlFor=\"frameSize\">\n            FrameSize:\n            <input\n              className=\"inputField\"\n              name=\"frameSize\"\n              type=\"number\"\n              min={1}\n              max={images.length}\n              defaultValue={frameSize}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label htmlFor=\"itemWidth\">\n            ItemWidth:\n            <input\n              className=\"inputField\"\n              name=\"itemWidth\"\n              type=\"number\"\n              min={10}\n              max={1000}\n              step={10}\n              defaultValue={itemWidth}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label htmlFor=\"animationDuration\">\n            AnimationDuration:\n            <input\n              className=\"inputField\"\n              name=\"animationDuration\"\n              type=\"number\"\n              min={500}\n              max={1500}\n              defaultValue={animationDuration}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label htmlFor=\"infinite\">\n            Infinite:\n            <input\n              className=\"inputField\"\n              name=\"infinite\"\n              type=\"checkbox\"\n              checked={infinite}\n              onChange={this.handleChange}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import { Component } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\ninterface State {\n  position: number;\n}\n\nexport class Carousel extends Component<Props, State> {\n  state: State = {\n    position: 0,\n  };\n\n  nextImage = () => {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      infinite,\n    } = this.props;\n    const { position } = this.state;\n    const maxWidth = (images.length - frameSize) * itemWidth;\n    const stepSum = this.props.step * itemWidth;\n\n    if (position - itemWidth * this.props.step < -maxWidth) {\n      this.setState({ position: -maxWidth });\n    } else {\n      this.setState({ position: position - stepSum });\n    }\n\n    if (position === -maxWidth && infinite) {\n      this.setState({ position: 0 });\n    }\n  };\n\n  prevImage = () => {\n    const { position } = this.state;\n    const stepSum = this.props.step * this.props.itemWidth;\n\n    if (position + stepSum > 0) {\n      this.setState({ position: 0 });\n    } else {\n      this.setState({ position: position + stepSum });\n    }\n\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      infinite,\n    } = this.props;\n    const maxWidth = (images.length - frameSize) * itemWidth;\n\n    if (position === 0 && infinite) {\n      this.setState({ position: -maxWidth });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n    const { position } = this.state;\n\n    const carouselTransform = {\n      transform: `translateX(${position}px)`,\n      transition: `transform ${animationDuration}ms`,\n    };\n\n    const containerWidth = { width: `${itemWidth * frameSize}px` };\n    const imgWidth = { width: `${itemWidth}px` };\n    const isDisabledPrev = position >= 0 && !this.props.infinite;\n    const isDisabledNext = position <= -(images.length - frameSize)\n       * itemWidth && !this.props.infinite;\n\n    return (\n      <div className=\"Carousel\">\n        <div className=\"Carousel_container\" style={containerWidth}>\n          <ul className=\"Carousel_list\" style={carouselTransform}>\n            {images.map((image) => (\n              <li className=\"Carousel_item\" key={image}>\n                <img\n                  className=\"Carousel_img\"\n                  alt={image}\n                  src={image}\n                  style={imgWidth}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"Carousel_buttons\">\n          <button\n            type=\"button\"\n            className=\"Carousel_button\"\n            onClick={this.prevImage}\n            disabled={isDisabledPrev}\n          >\n            Prev\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"Carousel_button\"\n            onClick={this.nextImage}\n            data-cy=\"next\"\n            disabled={isDisabledNext}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}