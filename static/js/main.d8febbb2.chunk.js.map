{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","shift","handlePrevButton","props","step","itemWidth","setState","prevState","scrolledDist","handleNextButton","images","frameSize","endOfScroll","length","this","animationDuration","carouselTransform","transform","transition","containerWidth","width","imgWidth","className","style","map","image","alt","src","type","onClick","disabled","Component","App","infinite","handleChange","event","target","name","value","min","max","htmlFor","defaultValue","onInput","checked","onChange","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8febbb2.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n}\n\ninterface State {\n  shift: number;\n}\n\nexport class Carousel extends Component<Props, State> {\n  state: State = {\n    shift: 0,\n  };\n\n  handlePrevButton = () => {\n    const {\n      step,\n      itemWidth,\n    } = this.props;\n\n    this.setState((prevState) => {\n      const scrolledDist = prevState.shift - +step * +itemWidth;\n\n      return (scrolledDist >= 0)\n        ? { shift: scrolledDist }\n        : { shift: 0 };\n    });\n  };\n\n  handleNextButton = () => {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n    } = this.props;\n\n    this.setState((prevState) => {\n      const scrolledDist = prevState.shift + +step * +itemWidth;\n      const endOfScroll = (images.length - +frameSize) * +itemWidth;\n\n      return (scrolledDist <= endOfScroll)\n        ? { shift: scrolledDist }\n        : { shift: endOfScroll };\n    });\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    const { shift } = this.state;\n\n    const carouselTransform = {\n      transform: `translateX(${-shift}px)`,\n      transition: `${animationDuration}ms`,\n    };\n\n    const containerWidth = { width: `${+itemWidth * +frameSize}px` };\n\n    const imgWidth = {\n      width: `${+itemWidth}px`,\n    };\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel_container\"\n          style={containerWidth}\n        >\n          <ul\n            className=\"Carousel_list\"\n            style={carouselTransform}\n          >\n            {images.map((image) => (\n              <li\n                className=\"Carousei_item\"\n                key={image}\n              >\n                <img\n                  className=\"Carousel_img\"\n                  alt={`${image}`}\n                  src={image}\n                  style={imgWidth}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"Сarousel_buttons\">\n          <button\n            type=\"button\"\n            className=\"Сarousel_button\"\n            onClick={this.handlePrevButton}\n            disabled={(shift <= 0)}\n          >\n            Prev\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"Сarousel_button\"\n            onClick={this.handleNextButton}\n            data-cy=\"next\"\n            disabled={(shift >= (images.length - +frameSize) * +itemWidth)}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name, value, min, max,\n    } = event.target;\n\n    if ((+value >= +min && +value <= +max) || (name === 'infinite')) {\n      switch (name) {\n        case 'itemWidth':\n          this.setState({ itemWidth: +value });\n          break;\n\n        case 'frameSize':\n          this.setState({ frameSize: +value });\n          break;\n\n        case 'step':\n          this.setState({ step: +value });\n          break;\n\n        case 'animationDuration':\n          this.setState({ animationDuration: +value });\n          break;\n\n        case 'infinite':\n          this.setState(state => ({ infinite: !state.infinite }));\n          break;\n\n        default:\n          return 0;\n      }\n    }\n\n    return this.state;\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 \n          data-cy=\"title\"\n          className=\"title\"\n        >\n          Carousel with\n          {' '}\n          { images.length }\n          {' '}\n          images\n        </h1>\n\n        <form className=\"form\">\n          <label htmlFor=\"step\">\n            Step:\n            <input\n              name=\"step\"\n              type=\"number\"\n              min={1}\n              max={5}\n              defaultValue={step}\n              onInput={this.handleChange}\n            />\n          </label>\n\n          <label htmlFor=\"frameSize\">\n            FrameSize:\n            <input\n              name=\"frameSize\"\n              type=\"number\"\n              min={1}\n              max={images.length}\n              defaultValue={frameSize}\n              onInput={this.handleChange}\n            />\n          </label>\n\n          <label htmlFor=\"itemWidth\">\n            ItemWidth:\n            <input\n              name=\"itenWidth\"\n              type=\"number\"\n              min={10}\n              max={1000}\n              step={10}\n              defaultValue={itemWidth}\n              onInput={this.handleChange}\n            />\n          </label>\n\n          <label htmlFor=\"animationDuration\">\n            AnimationDuration:\n            <input\n              name=\"animationDuration\"\n              type=\"number\"\n              min={500}\n              max={1500}\n              defaultValue={animationDuration}\n              onInput={this.handleChange}\n            />\n          </label>\n\n          <label htmlFor=\"infinite\">\n            Infinite:\n            <input\n              name=\"infinite\"\n              type=\"checkbox\"\n              checked={infinite}\n              onChange={this.handleChange}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          // infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}